#!/bin/bash

. /start-utils
set -o pipefail

export SERVER="minecraft_server.${VANILLA_VERSION// /_}.jar"

if [ ! -e $SERVER ] || [ -n "$FORCE_REDOWNLOAD" ]; then
  echo "Downloading $SERVER ..."
  debug "Finding version manifest for $VANILLA_VERSION"
  versionManifestUrl=$(curl -fsSL 'https://launchermeta.mojang.com/mc/game/version_manifest.json' | jq --arg VANILLA_VERSION "$VANILLA_VERSION" --raw-output '[.versions[]|select(.id == $VANILLA_VERSION)][0].url')
  result=$?
  if [ $result != 0 ]; then
    echo "ERROR failed to obtain version manifest URL ($result)"
    exit 1
  fi
  if [ $versionManifestUrl = "null" ]; then
    echo "ERROR couldn't find a matching manifest entry for $VANILLA_VERSION"
    exit 1
  fi
  debug "Found version manifest at $versionManifestUrl"

  serverDownloadUrl=$(curl -fsSL ${versionManifestUrl} | jq --raw-output '.downloads.server.url')
  result=$?
  if [ $result != 0 ]; then
    echo "ERROR failed to obtain version manifest from $versionManifestUrl ($result)"
    exit 1
  fi

  debug "Downloading server from $serverDownloadUrl"
  if isDebugging; then
    verbose=-v
  fi
  curl $verbose -fsSL -o $SERVER $serverDownloadUrl
  result=$?
  if [ $result != 0 ]; then
    echo "ERROR failed to download server from $serverDownloadUrl ($result)"
    exit 1
  fi
fi

# Continue to Final Setup
exec /start-finalSetup01World $@
